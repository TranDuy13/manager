{"ast":null,"code":"var _jsxFileName = \"/Volumes/DATA/employee-manager/frontend/src/components/weather/weather.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { alertClasses } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Api_Key = \"8d2de98e089f1c28e1a22fc19a24ef04\";\n\nfunction Weather() {\n  _s();\n\n  const [WeatherToDay, setWeather] = useState({\n    temperature: \"\",\n    wind: \"\",\n    humidity: \"\",\n    cloud: \"\"\n  });\n  const {\n    temperature,\n    wind,\n    cloud,\n    humidity\n  } = WeatherToDay;\n\n  const getWeather = async e => {\n    e.preventDefault();\n    const city = \"Ho Chi Minh\";\n    const country = \"Viet Nam\";\n    const weather_api = await axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${Api_Key}`);\n    const response = await weather_api.data;\n\n    if (city && country) {\n      setWeather({\n        temperature: response.main.temp - 273,\n        wind: response.wind.speed,\n        humidity: response.main.humidity,\n        cloud: response.weather[0].description\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: getWeather,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: cloud\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: wind\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: humidity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: temperature\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Hic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Weather, \"b5Nr6T7hl6vy5culuXJUMQkuam0=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Volumes/DATA/employee-manager/frontend/src/components/weather/weather.jsx"],"names":["useEffect","useState","axios","alertClasses","Api_Key","Weather","WeatherToDay","setWeather","temperature","wind","humidity","cloud","getWeather","e","preventDefault","city","country","weather_api","get","response","data","main","temp","speed","weather","description"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,eAA7B;;;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,SAASC,OAAT,GAAoB;AAAA;;AACZ,QAAM,CAACC,YAAD,EAAeC,UAAf,IAA6BN,QAAQ,CAAC;AACxCO,IAAAA,WAAW,EAAE,EAD2B;AAExCC,IAAAA,IAAI,EAAC,EAFmC;AAGxCC,IAAAA,QAAQ,EAAC,EAH+B;AAIxCC,IAAAA,KAAK,EAAE;AAJiC,GAAD,CAA3C;AAMA,QAAM;AAACH,IAAAA,WAAD;AAAcC,IAAAA,IAAd;AAAmBE,IAAAA,KAAnB;AAA0BD,IAAAA;AAA1B,MAAsCJ,YAA5C;;AAEA,QAAMM,UAAU,GAAG,MAAMC,CAAN,IAAU;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAE,aAAZ;AACA,UAAMC,OAAO,GAAC,UAAd;AACQ,UAAMC,WAAW,GAAE,MAAMf,KAAK,CAACgB,GAAN,CAAW,oDAAmDH,IAAK,IAAGC,OAAQ,UAASZ,OAAQ,EAA/F,CAAzB;AACA,UAAMe,QAAQ,GAAE,MAAMF,WAAW,CAACG,IAAlC;;AACA,QAAGL,IAAI,IAAIC,OAAX,EAAmB;AACfT,MAAAA,UAAU,CAAC;AACPC,QAAAA,WAAW,EAAEW,QAAQ,CAACE,IAAT,CAAcC,IAAd,GAAmB,GADzB;AAEPb,QAAAA,IAAI,EAAEU,QAAQ,CAACV,IAAT,CAAcc,KAFb;AAGPb,QAAAA,QAAQ,EAAES,QAAQ,CAACE,IAAT,CAAcX,QAHjB;AAIPC,QAAAA,KAAK,EAAEQ,QAAQ,CAACK,OAAT,CAAiB,CAAjB,EAAoBC;AAJpB,OAAD,CAAV;AAMH;AACJ,GAdT;;AAeJ,sBACI;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEb,UAAhB;AAAA,8BACI;AAAA,kBAAMD;AAAN;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,kBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAWH;;GAnCQH,O;;KAAAA,O;AAqCT,eAAeA,OAAf","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { alertClasses } from \"@mui/material\";\r\n\r\nconst Api_Key = \"8d2de98e089f1c28e1a22fc19a24ef04\";\r\n\r\nfunction Weather () {\r\n        const [WeatherToDay, setWeather] = useState({\r\n            temperature: \"\",\r\n            wind:\"\",\r\n            humidity:\"\",\r\n            cloud: \"\"\r\n          });\r\n        const {temperature, wind,cloud, humidity} = WeatherToDay\r\n    \r\n        const getWeather = async(e)=>{\r\n            e.preventDefault(); \r\n            const city= \"Ho Chi Minh\"\r\n            const country=\"Viet Nam\"\r\n                    const weather_api= await axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${Api_Key}`)\r\n                    const response= await weather_api.data;\r\n                    if(city && country){\r\n                        setWeather({\r\n                            temperature: response.main.temp-273,\r\n                            wind: response.wind.speed,\r\n                            humidity: response.main.humidity,\r\n                            cloud: response.weather[0].description\r\n                        })\r\n                    }\r\n                }\r\n    return(\r\n        <>\r\n            <form onSubmit={getWeather}>\r\n                <div>{cloud}</div>\r\n                <div>{wind}</div>\r\n                <div>{humidity}</div>\r\n                <div>{temperature}</div>\r\n                <button>Hic</button>\r\n            </form>\r\n            </>\r\n    )  \r\n}\r\n\r\nexport default Weather;"]},"metadata":{},"sourceType":"module"}